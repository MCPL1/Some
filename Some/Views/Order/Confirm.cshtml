@using Microsoft.AspNetCore.Identity
@using CourseProject.Models.DataModels
@using CourseProject.Data
@model CourseProject.Models.ViewModels.OrderConfirmViewModel
@inject UserManager<User> _userManager;

<div class="row">
    <div class="twelve wide column">
        @foreach (var status in Model.StatusList)
        {
            <a class="ui button"
               asp-controller="Order" asp-action="ConfirmIndex" asp-route-id="@status.Id">
                @status.Name
            </a>
        }
        <style></style>
        
        <table class="ui table ">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Имя</th>
                    <th scope="col">Телефон</th>
                    <th scope="col">Сума</th>
                    <th scope="col">Управление</th>
                </tr>
            </thead>

            <tbody>
                @for (var i = 0; i < Model.Orders.Count(); i++)
                {
                <tr>
                    <th scope="row">@(i + 1)</th>
                    <td>@(Model.Orders[i].User.Name)</td>
                    <td>@(Model.Orders[i].User.PhoneNumber)</td>
                    <td>@Model.Orders[i].Items.Sum(p => (decimal)p.Quantity * p.Price)</td>

                    <td>
                        @if (Model.Orders[i].Status.Name == StatusConst.First)
                        {
                            <a class="btn btn-outline-warning"
                               asp-controller="Order" asp-action="Confirm" asp-route-id="@Model.Orders[i].Id">
                                Confirm
                            </a>
                            <a class="btn btn-outline-danger"
                               asp-controller="Order" asp-action="Reject" asp-route-id="@Model.Orders[i].Id">
                                Reject
                            </a>
                        }
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>
    <script>
    function openForm() {
        document.getElementById("msgForm").style.display = "block";
    }

    function saveForm() {

        var text = document.getElementsByName("msg").values()[0];

        var msg = getCookie("msg");
        if (msg == undefined)
            msg = [new { text: text, userId: "@_userManager.GetUserId(User)" }];
        else msg.add(new { text: text, userId: "@_userManager.GetUserId(User)" });
        setCookie("msg", msg, 10);

        document.getElementById("msgForm").style.display = "none";
    }

    function closeForm() {
        document.getElementById("msgForm").style.display = "none";
    }

    function setCookie(name,value,days) {
        var expires = "";
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + (days*24*60*60*1000));
            expires = "; expires=" + date.toUTCString();
        }
        document.cookie = name + "=" + (value || "")  + expires + "; path=/";
    }

    function getCookie(name) {
        let matches = document.cookie.match(new RegExp(
            "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
        ));
        return matches ? decodeURIComponent(matches[1]) : undefined;
    }
    </script>